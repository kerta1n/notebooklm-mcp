version: '3.8'

services:
  notebooklm-mcp:
    build: .
    image: notebooklm-mcp:latest
    container_name: notebooklm-mcp-server
    restart: unless-stopped

    volumes:
      # REQUIRED: Mount config file
      - ./notebooklm-config.json:/app/notebooklm-config.json:ro

      # Persist Chrome profile created by `notebooklm-mcp init`
      - ./chrome_profile_notebooklm:/app/chrome_profile_notebooklm

      # Optional: Mount custom scripts
      - ./scripts:/app/scripts:ro

    # For STDIO MCP mode (default), no ports needed
    # For HTTP mode, uncomment appropriate port:
    # ports:
    #   - "8001:8001"  # HTTP transport
    #   - "8002:8002"  # SSE transport

    # Security settings
    security_opt:
      - no-new-privileges:true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

    # Health check
    healthcheck:
      test: ["CMD", "uv", "run", "python", "-c", "from notebooklm_mcp.config import ServerConfig; print('Config valid') if ServerConfig.from_file('/app/notebooklm-config.json') else exit(1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: notebooklm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: notebooklm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    profiles:
      - monitoring

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: notebooklm-mcp-network
