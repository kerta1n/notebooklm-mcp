name: "ðŸ§ª Tests & Quality"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Cancel previous runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTEST_DISABLE_PLUGIN_AUTOLOAD: 1
  QT_QPA_PLATFORM: offscreen

jobs:
  test:
    name: "ðŸ§ª Unit Tests (Python ${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: "ðŸ“¥ Checkout repository"
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        task install
    
    - name: Show available tasks
      run: task --list
      
    - name: Lint with ruff
      run: task lint
    
    # Skip mypy for now due to type annotation work in progress
    # - name: Type check with mypy
    #   run: task lint:mypy
    #   continue-on-error: true

    - name: Run unit tests
      run: task test:unit
      env:
        QT_QPA_PLATFORM: offscreen
        PYTEST_DISABLE_PLUGIN_AUTOLOAD: 1
    
    - name: Run tests with coverage
      run: task test:coverage
      env:
        QT_QPA_PLATFORM: offscreen
        PYTEST_DISABLE_PLUGIN_AUTOLOAD: 1
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      if: always()

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: htmlcov/

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        task install

    - name: Test package installation and CLI
      run: |
        task cli:test
        task cli:import

    - name: Test basic functionality
      run: task test:quick

  quality-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        task install

    - name: Run development checks
      run: task dev:check
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Run Bandit Security Scan
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-report.json || true

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: bandit-report.json

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        task install

    - name: Build package
      run: task build

    - name: Check package
      run: |
        pip install twine
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/